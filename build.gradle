buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNewHorizons:ForgeGradle:1.2.4'
    }
}

repositories {
    maven {
        name = "mightypirates"
        url = "https://maven.cil.li/"
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    // These are necessary because some parts of the maven repo is weirdly structured, this needs to be fixed.
    ivy {
        name 'weird maven repos'
        artifactPattern "https://maven.cil.li/[module]/[revision]/[module]-[revision].[ext]"
        metadataSources {
            ivyDescriptor()
            artifact()
        }
    }
    ivy {
        name 'weird maven repos 2'
        artifactPattern "https://maven.cil.li/[module]/[revision]/[module]-[revision]-[classifier].[ext]"
        metadataSources {
            ivyDescriptor()
            artifact()
        }
    }
    maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
    }
    ivy {
        name 'gtnh_download_source'
        artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]-[revision].[ext]"
        allowInsecureProtocol true
    }
    maven { // GalacticGreg, YAMCore,..
        name 'UsrvDE'
        url "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases/"
        allowInsecureProtocol true
    }
    maven {
        url "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/"
        allowInsecureProtocol true
    }
    maven {
        name = "ic2"
        url = "https://maven.ic2.player.to/"
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    maven {
        name = "IGW"
        url = "https://maven.k-4u.nl/"
    }
    maven {
        name 'OpenComputers'
        url = "https://maven.cil.li/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

apply plugin: 'forge'

project.ext {
	massive = "1"
    major = "12"
    minor = "7"
    mcVersion = "1.7.10"
}

version = "${project.ext.massive}.${project.ext.major}.${project.minor}"
group= "pneumaticCraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PneumaticCraft"

if (System.getenv().BUILD_NUMBER != null) {
    version += "-${System.getenv().BUILD_NUMBER}"
} else {
    version += " - err"
}

//delete 'Version.txt'
//new File('Version.txt') << "build/libs/" + archivesBaseName + "-" + project.ext.mcVersion + "-" + version + "-universal.jar"

def grabDep(url) {
    ant.get(src: url, dest: 'dep')
	compile files("dep/" + url.substring(url.lastIndexOf("/")));
}

dependencies {
    implementation "com.github.GTNewHorizons:NotEnoughItems:master-SNAPSHOT:dev"
    implementation "com.github.GTNewHorizons:ForgeMultipart:master-SNAPSHOT:dev"
    implementation "com.github.GTNewHorizons:waila:master-SNAPSHOT:dev"
    implementation "com.github.GTNewHorizons:OpenComputers:master-SNAPSHOT:api"
    implementation "com.github.GTNewHorizons:Applied-Energistics-2-Unofficial:master-SNAPSHOT:dev"
    implementation "com.mod-buildcraft:buildcraft:7.1.23:dev"
    implementation "net.industrial-craft:industrialcraft-2:2.2.828-experimental:dev"
    implementation "igwmod:IGW-Mod-1.7.10:1.1.3-18:userdev"
    implementation "com.github.bombcar:Equivalent-Exchange-3:master-SNAPSHOT:dev"
}

minecraft {
    version = "${project.ext.mcVersion}-10.13.4.1614-1.7.10"
    runDir = "minecraft/assets"

    // replacing stuff in the source
	replace '@MASSIVE@', project.massive
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    if (System.getenv("BUILD_NUMBER") != null) {
        replace '@BUILD_NUMBER@', System.getenv("BUILD_NUMBER")
    } else {
        replace '@BUILD_NUMBER@', 0
    }
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
			exclude 'Models'
			exclude 'unused resources'
			exclude '**/.txt'
			exclude '**/.docx'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
	
	api {
        java {
            srcDir 'api'
        }
    }
}

apply plugin: 'idea'

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                }
            }
        }
    }
}

jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
	manifest {
        attributes 'FMLAT': 'PneumaticCraft_at.cfg'
    }
}

task userdevJar(type: Jar) {
    from(sourceSets.main.output)
	from(sourceSets.main.allSource)
    appendix = "${project.ext.mcVersion}"
    classifier = "userdev"
}

// Create API library jar
task apiJar(type: Jar) {
	from sourceSets.main.java
    include "pneumaticCraft/api/**"

    from sourceSets.main.output
    include "pneumaticCraft/api/**"

	appendix = "${project.ext.mcVersion}"
    classifier = 'api'
}

artifacts {
    archives userdevJar
	archives apiJar
}
